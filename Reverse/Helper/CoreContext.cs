// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Reflection.Emit;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Reverse.Helper;

namespace Reverse.Helper;

public partial class CoreContext : DbContext
{
    public CoreContext()
    {
    }

    public CoreContext(DbContextOptions<CoreContext> options)
        : base(options)
    {
    }

    public virtual DbSet<InformationSchema> InformationSchemas { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        if (!optionsBuilder.IsConfigured)
        {
            IConfigurationRoot configuration = new ConfigurationBuilder()
            //SetBasePath diisi dengan letaks path dari file config (ex C:\Services\BackBniFleksi)
            .SetBasePath(Directory.GetCurrentDirectory())
            //AddJsonFile diisi dengan nama file config
            .AddJsonFile("appsettings.json").Build();
            //optionsBuilder.UseSqlServer("Data Source=.;Initial Catalog=db_bni_fleksi_pusat;User ID=Admin;Password=Admin123#;Trust Server Certificate=True;Command Timeout=300");
            optionsBuilder.UseSqlServer(
               //call variable `configuration`, panggil extensi GetConnectionString kemudian parameter diisi dengan key yang bnerada di dalam file config
               connectionString: configuration.GetConnectionString("Database"), builder => builder.EnableRetryOnFailure(5, TimeSpan.FromSeconds(10), null))
            .EnableSensitiveDataLogging();
        }
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}